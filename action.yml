name: "Preevy Up"
description: "Runs the Preevy `up` command"
author: "Livecycle"
inputs:
  profile-url:
    required: true
    description: "The Preevy profile URL"
  args:
    required: false
    description: "Additional args to provide to the `up` command."
  docker-compose-yaml-path:
    required: false
    description: "The path to the docker compose file. Uses current working directory if not provided."
outputs:
  urls-markdown:
    description: "The generated URLs of the preview environments create by Preevy, formatted as a markdown table"
    value: ${{ steps.run_preevy.outputs.urls-markdown }}
  urls-json:
    description: "The generated URLs of the preview environments create by Preevy, formatted as a markdown table"
    value: ${{ steps.run_preevy.outputs.urls-json }}
runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install the Preevy CLI
      shell: bash
      run: npm i -g preevy
    - name: Initialize Preevy
      shell: bash
      run: preevy init --from ${{ inputs.profile-url }}
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - name: Run Preevy
      shell: bash
      id: run_preevy
      run: |
        # Convert the docker-compose-yaml-path input to an env var
        compose_file_path=${{ inputs.docker-compose-yaml-path }}

        # Run the up command
        preevy up ${compose_file_path:+-f ${compose_file_path}} ${{ inputs.args }}

        # Fetch the generated preevy urls
        urls_json=$(preevy urls ${compose_file_path:+-f ${compose_file_path}} --json)

        # Format urls into a markdown table and store them in urls.txt
        cat << EOF > urls.txt
        | Service | Port | URL |
        |---------|------|-----|
        $(echo $urls_json | jq -r '.[] | {service, port, url} | join(" | ") | "| " + . + " |" ')
        EOF

        # Create a delimiter as detailed here: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)

        # Create the urls-markdown output
        echo "urls-markdown<<$EOF" >> $GITHUB_OUTPUT
        cat urls.txt >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT

        # Create the urls-json output
        echo "urls-json<<$EOF" >> $GITHUB_OUTPUT
        echo $urls_json >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT
