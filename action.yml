name: "Preevy Up"
description: "Runs the Preevy `up` command"
author: "Livecycle"
branding:
  icon: box
  color: blue
inputs:
  profile-url:
    required: true
    description: "The Preevy profile URL"
  args:
    required: false
    description: "Additional args to provide to the `up` command."
  docker-compose-yaml-paths:
    required: false
    description: "Array of comma separated paths to docker compose files. Uses current working directory if not provided."
  version:
    required: false
    description: "Version of Preevy to use. Defaults to latest."
    default: latest
  node-cache:
    required: false
    description: "Node package manager used for caching. Supported values: npm, yarn, pnpm, or ''. See https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data"
    default: npm
  release-type:
    required: false
    description: "EXPERIMENTAL: Type of release to use. Supported values: npm, gh-release"
    default: npm
outputs:
  urls-json:
    description: "The generated URLs of the preview environments create by Preevy, formatted as a JSON object"
    value: ${{ steps.run_preevy.outputs.urls-json }}
  urls-file:
    description: "Path to file containing the generated URLs of the preview environments create by Preevy, formatted as a JSON object"
    value: ${{ steps.run_preevy.outputs.urls-file }}
runs:
  using: "composite"
  steps:
    -
      uses: actions/setup-node@v4
      if: ${{ inputs.release-type == 'npm' }}
      with:
        node-version: 18
        cache: ${{ inputs.node-cache }}

    - name: Install Preevy from GH release
      shell: bash
      id: install_prevy_gh_release
      if: ${{ inputs.release-type == 'gh-release' }}
      run: |
        set -eou pipefail

        function os_suffix() {
          case "${{ runner.os }}" in
            "Linux") echo -n "linux";;
            "Windows") echo -n "win";;
            "macOS") echo -n "macos";;
            *) echo "No release for OS ${{ runner.os }}" 1>&2; exit 1;;
          esac
        }

        function arch_suffix() {
          case "${{ runner.arch }}" in
            "X64") echo -n "x64";;
            "ARM64") echo -n "arm64";;
            *) echo "No release for arch ${{ runner.arch }}" 1>&2; exit 1;;
          esac
        }

        release_version='${{ inputs.version }}'
        if [[ "${{ inputs.version }}" == "latest" ]]; then
          release_version=$(curl -s https://api.github.com/repos/livecycle/preevy/releases/latest | jq -r .tag_name)
        fi

        release_file="preevy-$(os_suffix)-$(arch_suffix).tar"
        release_url="https://github.com/livecycle/preevy/releases/download/${release_version}/${release_file}"

        wget -q "${release_url}" -O - | sudo tar -x -C /usr/local/bin

    - name: Run Preevy
      shell: bash
      id: run_preevy
      run: |
        if [[ ! -z "${{ inputs.docker-compose-yaml-paths }}" ]]; then
          opts="-f ${{ inputs.docker-compose-yaml-paths }}"
        fi

        urls_file=${RUNNER_TEMP}/preevy_urls.${RANDOM}.json

        if [[ "${{ inputs.release-type }}" == "npm" ]]; then
          preevy_cmd="npx -- preevy@${{ inputs.version }}"
        else
          preevy_cmd=preevy
        fi

        ${preevy_cmd} up ${opts} --profile '${{ inputs.profile-url }}' --output-urls-to ${urls_file} ${{ inputs.args }}

        cat ${urls_file}

        echo "urls-json=$(cat ${urls_file})" >> $GITHUB_OUTPUT
        echo "urls-file=${urls_file}" >> $GITHUB_OUTPUT
